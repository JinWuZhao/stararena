// Trigger Declarations
static trigger gt_unitctrl_SetAIMode;
static trigger gt_unitctrl_SetUnit;
static trigger gt_unitctrl_SetServants;

// Function Declarations
void InitUnitControl();

static void unitctrl_SetAIMode_Init();
static void unitctrl_SetUnit_Init();
static void unitctrl_SetServants_Init();

// Functions
void InitUnitControl() {
    unitctrl_SetAIMode_Init();
    unitctrl_SetUnit_Init();
    unitctrl_SetServants_Init();
}

bool unitctrl_SetAIMode_Func(bool testConds, bool runActions) {
    string lv_textTag;
    int lv_aiMode;
    UnitPlayer lv_unitPlayer;

    lv_textTag = arena_gf_CurrentCommandArgument(1);
    lv_aiMode = StringToInt(arena_gf_CurrentCommandArgument(2));
    if (!AIModeValidMode(lv_aiMode)) {
        return false;
    }

    if (!runActions) {
        return true;
    }

    if (!UnitPlayerFromName(lv_textTag, lv_unitPlayer)) {
        return false;
    }

    AIModeSetMode(lv_unitPlayer, lv_aiMode);
    SaveUnitPlayer(lv_unitPlayer);

    return true;
}

static void unitctrl_SetAIMode_Init() {
    gt_unitctrl_SetAIMode = TriggerCreate("unitctrl_SetAIMode_Func");
    TriggerAddEventGeneric(gt_unitctrl_SetAIMode, (arena_gv_commandPrefix + "set-aimode"));
}

bool unitctrl_SetUnit_Func(bool testConds, bool runActions) {
    string lv_name = arena_gf_CurrentCommandArgument(1);
    string lv_unitType = arena_gf_CurrentCommandArgument(2);
    UnitPlayer lv_player;
    UnitData lv_unitData;

    if (!runActions) {
        return true;
    }

    if (!UnitPlayerFromName(lv_name, lv_player)) {
        return false;
    }
    if (!UnitDataGetByUnitType(lv_unitType, lv_unitData)) {
        return false;
    }
    lv_player.unitType = lv_unitType;
    SaveUnitPlayer(lv_player);

    return true;
}

static void unitctrl_SetUnit_Init() {
    gt_unitctrl_SetUnit = TriggerCreate("unitctrl_SetUnit_Func");
    TriggerAddEventGeneric(gt_unitctrl_SetUnit, (arena_gv_commandPrefix + "set-unit"));
}

bool unitctrl_SetServants_Func(bool testConds, bool runActions) {
    string lv_playerName = arena_gf_CurrentCommandArgument(1);
    int lv_servantsNum = StringToInt(arena_gf_CurrentCommandArgument(2));
    string lv_servantType = arena_gf_CurrentCommandArgument(3);
    UnitPlayer lv_unitPlayer;
    UnitData lv_unitData;

    if (!runActions) {
        return true;
    }

    if (!UnitPlayerFromName(lv_playerName, lv_unitPlayer)) {
        return false;
    }

    lv_unitPlayer.servants = lv_servantsNum;
    if (UnitDataGetByUnitType(lv_servantType, lv_unitData)) {
        lv_unitPlayer.servantType = lv_servantType;
    }
    SaveUnitPlayer(lv_unitPlayer);

    return true;
}

static void unitctrl_SetServants_Init() {
    gt_unitctrl_SetServants = TriggerCreate("unitctrl_SetServants_Func");
    TriggerAddEventGeneric(gt_unitctrl_SetServants, (arena_gv_commandPrefix + "set-servants"));
}
